find minimum element in a sorted and rotated array

5 6 1 2 3 4

1. basic approach
int findMini(int *arr, int n){
	for(int i = 1 ; i < n ; i++){
		if(arr[i] < arr[i-1]){
			return arr[i];
		}
	}
	return arr[0];
}

2. modified binary search

      -
    - -
  - - -
- - - -
- - - -    
- - - -  
- - - - 
- - - - 
l     r
0 1 2 3
      m
int smallestInRotated(int *arr, int n){
	int l = 0, r = n-1;
	int m;  			// l = 0 r = 3
	while(arr[l]>=arr[r]){      	// arr[l] = 4 > arr[r] = 8
		m = (l+r)/2;      	// m = 3
		if(arr[l]>arr[m]){   	// arr[l] = 5 > arr[m] = 8 
			r = m;	        // 
		}else if(arr[r]<arr[m]){ // arr[r] = 4 < arr[m] = 8
			l = m+1; 	// 
		}else{
			break;
		}
	}
	return arr[l];
}



 


